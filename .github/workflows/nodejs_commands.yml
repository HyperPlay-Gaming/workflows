name: Setup Node.js Env and Run Commands

on:
  workflow_call:
    inputs:
      node_version:
        required: true
        type: string
      # pnpm, yarn, or npm
      pkg_manager:
        required: true
        type: string
      install:
        required: true
        type: string
      name:
        required: true
        type: string
      command_one:
        required: true
        type: string
      command_one_name:
        required: true
        type: string
      command_two:
        required: false
        type: string
      command_two_name:
        required: false
        type: string
      checkout_recursive:
        required: true
        type: boolean
    secrets:
      pat:
        required: false
      NPM_TOKEN:
        required: true

jobs:
  commands:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ inputs.name }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.pat }}
        if: ${{ inputs.checkout_recursive }}
      - uses: actions/checkout@v4
        if: ${{ !inputs.checkout_recursive }}
      # pnpm has to be added before setup node https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
      - uses: pnpm/action-setup@v3
        with:
          version: latest
        if: ${{ inputs.pkg_manager }} == 'pnpm'
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: ${{ inputs.pkg_manager }}
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - name: Authenticate with private NPM package
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Install modules.
        run: ${{ inputs.install }}
      - name: ${{ inputs.command_one_name }}
        run: ${{ inputs.command_one }}
      - name: ${{ inputs.command_two_name }}
        run: ${{ inputs.command_two }}
        if: ${{ inputs.command_two }}
